/* Given a binary tree, return the inorder traversal of its nodes’ values.

Example :
Given binary tree

   1
    \
     2
    /
   3
return [1,3,2].

Using recursion is not allowed. */

public class Solution {
    public ArrayList<Integer> inorderTraversal(TreeNode A) {
        
        TreeNode curr = null;

        Stack<TreeNode> stack = new Stack<>();
        ArrayList<Integer> ls = new ArrayList<>();
        
        if(A != null) {
            curr = A;
        }
        
        while(!stack.empty() || curr != null) {
            
            while(curr != null) {
                stack.push(curr);
                curr = curr.left;
            }
            curr = stack.pop();
            ls.add(curr.val);
            curr = curr.right;
        }
       
       return ls;
    }
}