/* Given an array of of size n and a number k, find all elements that appear more than n/k times

Given an array of size n, find all elements in array that appear more than n/k times. For example, if the input arrays is {3, 1, 2, 2, 1, 2, 3, 3} and k is 4, then the output should be [2, 3]. Note that size of array is 8 (or n = 8), so we need to find all elements that appear more than 2 (or 8/4) times. There are two elements that appear more than two times, 2 and 3.

https://www.geeksforgeeks.org/given-an-array-of-of-size-n-finds-all-the-elements-that-appear-more-than-nk-times/

My solution is O(nLogn)*/


import java.util.ArrayList;
import java.util.Arrays;

public class GeeksAppearingRatio {

	public static void main(String[] args) {
		int [] arr = {4, 5, 6, 7, 8, 4, 4};;
		int key = 3;
		ArrayList<Integer> ls = ration(arr, key);
		
		for(int i = 0; i < ls.size(); i++) {
			System.out.print(ls.get(i) + " ");
		}
		
	}
	
	public static ArrayList<Integer> ration(int [] arr, int key) {
		ArrayList<Integer> ls = new ArrayList<>();
		int ratio = (int) Math.ceil(arr.length/key);
		Arrays.sort(arr);
		
		for(int i = 0; i < arr.length - ratio; i++) {
			if(arr[i] == arr[i + ratio]) {
				ls.add(arr[i]);
			}
		}
		return ls;
	}

}
